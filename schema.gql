# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MovementCategory {
  id: Float!
  name: String!
  code: String!
  description: String!
  sign: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MovementType {
  id: Float!
  name: String!
  code: String!
  sign: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Movement {
  id: Float!
  description: String!
  amount: Float!
  signedAmount: Float!
  closed: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  movementType: MovementType!
  movementCategory: MovementCategory!
}

type User {
  id: Float!
  authUid: String!
  fullName: String!
  email: String!
  phone: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Balance {
  amount: Float
}

type Query {
  sayHello: String!
  getUserByAuthUid(getUserByAuthUidInput: GetUserByAuthUidInput!): User!
  getAllMovementCategories(getAllMovementCategoriesInput: GetAllMovementCategoriesInput!): [MovementCategory!]!
  getBalanceResume(getBalanceResumeInput: GetBalanceResumeInput!): Balance!
  getAllMovements(getAllMovementsInput: GetAllMovementsInput!): [Movement!]!
  getOneMovement(getOneMovementInput: GetOneMovementInput!): Movement!
}

input GetUserByAuthUidInput {
  authUid: String!
}

input GetAllMovementCategoriesInput {
  sign: Int!
}

input GetBalanceResumeInput {
  userAuthUid: String!
}

input GetAllMovementsInput {
  userAuthUid: String!
  limit: Int
  skip: Int
}

input GetOneMovementInput {
  userAuthUid: String!
  id: Int!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  changeUserEmail(changeUserEmailInput: ChangeUserEmailInput!): User!
  changeUserPassword(changeUserPasswordInput: ChangeUserPasswordInput!): User!
  changeUserPhone(changeUserPhoneInput: ChangeUserPhoneInput!): User!
  resetUserPassword(resetUserPasswordInput: ResetUserPasswordInput!): String!
  createOutcomeMovement(createOutcomeMovementInput: CreateOutcomeMovementInput!): Movement!
  createIncomeMovement(createIncomeMovementInput: CreateIncomeMovementInput!): Movement!
  updateIncomeMovement(updateIncomeMovementInput: UpdateIncomeMovementInput!, getOneMovementInput: GetOneMovementInput!): Movement!
  updateOutcomeMovement(updateOutcomeMovementInput: UpdateOutcomeMovementInput!, getOneMovementInput: GetOneMovementInput!): Movement!
  removeMovement(getOneMovementInput: GetOneMovementInput!): Movement!
}

input CreateUserInput {
  fullName: String!
  email: String!
  phone: String!
  password: String!
}

input UpdateUserInput {
  authUid: String!
  fullName: String!
}

input ChangeUserEmailInput {
  authUid: String!
  email: String!
}

input ChangeUserPasswordInput {
  authUid: String!
  oldPassword: String!
  newPassword: String!
}

input ChangeUserPhoneInput {
  authUid: String!
  phone: String!
}

input ResetUserPasswordInput {
  email: String!
}

input CreateOutcomeMovementInput {
  userAuthUid: String!
  movementCategoryId: Int!
  amount: Float!
  description: String!
}

input CreateIncomeMovementInput {
  userAuthUid: String!
  movementCategoryId: Int!
  amount: Float!
  description: String!
}

input UpdateIncomeMovementInput {
  movementCategoryId: Int
  amount: Float
  description: String
  closed: Boolean
}

input UpdateOutcomeMovementInput {
  movementCategoryId: Int
  amount: Float
  description: String
  closed: Boolean
}
